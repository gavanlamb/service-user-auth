parameters:
  - name: environment
    displayName: Name of the environment to deploy to
    type: string
  - name: region
    displayName: Name of AWS region to deploy into
    type: string
    default: ap-southeast-2
  - name: stateBucketName
    displayName: Name of the S3 bucket name for the state file
    type: string
  - name: stateLockTableName
    displayName: Name of the DynamoDB table name for state locking
    type: string
  - name: serviceConnectionName
    displayName: Service connection name, used for init & plan
    type: string

jobs:
  - job: plan
    displayName: Plan
    steps:
      - template: aws/terraform/plan.yml@templates
        parameters:
          artifactName: ${{ parameters.environment }}_${{ parameters.region }}
          initAdditionalCommandOptions: '-no-color'
          planAdditionalCommandOptions: '-var-file=variables/${{ parameters.environment }}.${{ parameters.region }}.tfvars'
          serviceConnectionName: ${{ parameters.serviceConnectionName }}
          stateBucketName: ${{ parameters.stateBucketName }}
          stateLockTableName: ${{ parameters.stateLockTableName }}
          version: 1.0.2
          workingDirectory: $(Build.SourcesDirectory)/infrastructure
          workspaceName: service-user-auth-${{ parameters.environment }}
  - job: approve
    displayName: Approve
    dependsOn: Plan
    pool: server
    steps:
      - task: ManualValidation@0
        displayName: Approve Changes
        inputs:
          notifyUsers: '[Expensely]\Expensely Team'
          onTimeout: reject
          instructions: Validate Terraform plan
        timeoutInMinutes: 5
  - deployment: apply
    displayName: Apply
    dependsOn: approve
    environment: ${{ parameters.environment }}
    strategy:
      runOnce:
        deploy:
          steps:
            - download: none
            - template: aws/terraform/apply.yml@templates
              parameters:
                applyAdditionalCommandOptions: '-no-color'
                archiveName: terraform.tar.gz
                artifactName: ${{ parameters.environment }}_${{ parameters.region }}
                planFile: plan.tfplan
                serviceConnectionName: ${{ parameters.serviceConnectionName }}
                version: 1.0.2
                workingDirectory: $(Pipeline.Workspace)
